---
# defaults for ansible-role-users
# Bootstrap user which can create the accounts
# Can be e.g. root, or cloud-user, or ubuntu
bootstrap_user: "root"

admingroup: "admin"
adminshell: "/bin/bash"
# If you don't want to add admingroup to sudoers - set admin_sudoers to False
admin_sudoers: True
#adminusers:
#  - {name: admin1, state: 'present', uid: 5001, group: "{{admingroup}}", shell: "{{adminshell}}", pubkey: "ssh-rsa KEY admin1@example.com" }
#  - {name: bad_admin2, state: 'absent', uid: 5002, group: "{{admingroup}}", shell: "{{adminshell}}", pubkey: "ssh-rsa KEY admin2@example.com" }
#  - {name: bad_admin3, state: 'present', uid: 5052, group: "{{admingroup}}", shell: "{{adminshell}}", pubkey: "ssh-rsa KEY admin3@example.com", key_state: "absent" }
#  - {name: rsyncuser1, state: 'present', uid: 5003, group: "{{admingroup}}", groups: "agroup,bgroup", shell: "{{adminshell}}", pubkey: "ssh-rsa KEY rsync1@example.com", options: 'command="/usr/local/bin/rrsync /allow/rrsync/here/directory",no-agent-forwarding,no-port-forwarding,no-pty,no-user-rc,no-X11-forwarding' }
#
#moreusers:
#  - {name: someotheruser1, state: 'present', uid: 6001, shell: "{{adminshell}}" }

admin_list_of_user_lists:
  - "{{ adminusers | default([]) }}"
  - "{{ moreusers | default([]) }}"

admin_root_keys: []
#admin_root_keys:
#  - { state: 'present', pubkey: "ssh-rsa KEY admin1@example.com" }
#  - { state: 'absent', pubkey: "ssh-rsa KEY2 bad_admin2@example.com" }

adminremove_passwords: False
# If you need to point to a hard coded config file or otherwise mess with the
# manual ssh which runs at the start of this role to test whether to use the
# default user or root.
# Defaults to ssh_args from ansible.cfg or empty string if that isn't set/found
ssh_extra_args: "{{ ssh_args | default('') }}"
# Create groups from a list
admin_list_of_groups: []
#
#admin_list_of_groups:
#  - { name: agroup, gid: 27001 }
#  - { name: bgroup, gid: 27002 }
...
